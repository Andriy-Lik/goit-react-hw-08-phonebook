{"version":3,"file":"static/js/789.fedcc91b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.js","redux/Contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","redux/Filter/filterSelectors.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/Message/Message.module.css?e83e","components/Message/Message.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Container_Container__dPyVg\"};","import PropTypes from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => {\n    return (\n        <div className={css.Container}>\n            {children}\n        </div>\n    );\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactFormLabel\":\"ContactForm_contactFormLabel__16ABo\",\"contactFormInput\":\"ContactForm_contactFormInput__eC5HJ\",\"contactFormButton\":\"ContactForm_contactFormButton__gvoPv\"};","import React from \"react\";\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { addContacts } from \"../../redux/Contacts/contactsOperations\";\nimport { selectContacts } from '../../redux/Contacts/contactsSelectors';\nimport css from './ContactForm.module.css';\n\n\nconst ContactForm = () => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = nanoid();\n    const numberInputId = nanoid();\n    \n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    const handleChange = e => {\n        switch (e.target.name) {\n            case 'name': setName(e.target.value);\n            break;\n\n            case 'number': setNumber(e.target.value);\n            break;\n\n            default: return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        const normalizedName = name.toLowerCase();\n        contacts.find(contact => contact.name.toLowerCase() === normalizedName) \n        ? Report.failure(`${name} is already in contacts `) \n        : dispatch(addContacts({ id: nanoid(), name: name, number: number }))\n        // Reset\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form className={css.contactForm} onSubmit={handleSubmit} >\n            <label className={css.contactFormLabel} htmlFor={nameInputId}>Name</label>\n            <input\n                className={css.contactFormInput}\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter name\"\n                id={nameInputId}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}\n            />\n\n            <label className={css.contactFormLabel} htmlFor={numberInputId}>Number</label>\n            <input\n                className={css.contactFormInput}\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter phone number\"\n                id={numberInputId}\n                required\n                pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                value={number}\n                onChange={handleChange}\n            />\n\n            <button className={css.contactFormButton} type=\"submit\">Add contact</button>\n        </form>\n    );\n};\n\nexport default ContactForm;","export const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListText\":\"ContactList_contactListText__SGTz9\",\"contactListButton\":\"ContactList_contactListButton__3Tc2d\"};","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContacts } from '../../redux/Contacts/contactsOperations';\nimport { selectContacts } from '../../redux/Contacts/contactsSelectors';\nimport { selectFilter } from '../../redux/Filter/filterSelectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const onDelete = contactId => { dispatch(deleteContacts(contactId)) };\n\n    const normalizedFilter = filter.toLowerCase();\n    const getVisibleContact = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    \n    return (\n        <>\n            <ul className={css.contactList}>\n                {getVisibleContact.map((contact) => (\n                    <li className={css.contactListItem} key={contact.id} >\n                        <p className={css.contactListText}>{contact.name}: {contact.number}</p>\n                        <button \n                            className={css.contactListButton}\n                            type=\"button\" \n                            onClick={() => onDelete(contact.id)} \n                        >Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"filterBox\":\"Filter_filterBox__A-UPt\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from \"nanoid\";\nimport { filterActions } from \"redux/Filter/filterSlice\";\nimport { selectFilter } from '../../redux/Filter/filterSelectors';\nimport css from './Filter.module.css';\n\n\nfunction Filter() {\n    const filterInputId = nanoid();\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    \n    const changeFilter = e => { dispatch(filterActions(e.target.value)) };\n\n    return (\n        <div className={css.filterBox}>\n            <label className={css.filterLabel} htmlFor={filterInputId}>Find contacts by name</label>\n            <input\n                 className={css.filterInput} \n                id={filterInputId} \n                type=\"text\"\n                name=\"filter\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\" \n                value={filter} \n                onChange={changeFilter} \n            />\n        </div>\n    \n    );\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"messageBox\":\"Message_messageBox__wO7V+\",\"messageText\":\"Message_messageText__qaNJz\"};","import css from './Message.module.css';\n\nfunction Message() {\n    return (\n        <div className={css.messageBox}>\n            <p className={css.messageText}>PhoneBook is empty!!!</p>\n        </div>\n    );\n}\n\nexport default Message;","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    font-size: 36px;\n    font-weight: 700;\n    margin: 0 0 20px;\n`;\n\nexport const Span = styled.span`\n    color: skyblue;\n`;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Section from '../../components/Section';\nimport Container from \"components/Container\";\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\nimport Message from '../../components/Message';\nimport { fetchContacts } from '../../redux/Contacts/contactsOperations';\nimport { selectContacts, selectIsLoading, selectError } from '../../redux/Contacts/contactsSelectors';\nimport { Title, Span } from './Contacts.styled';\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title='Phonebook'>\n        <Container>\n          <Title><Span>P</Span>honebook</Title>\n          <ContactForm />\n        </Container>\n      </Section>\n\n      <Section title='Contacts'>\n        <Container>\n          <Title>Contact<Span>s</Span></Title>\n          <Filter />\n          {isLoading && !error && <b>Request in progress...</b>}\n          {contacts.length > 0 ? <ContactList /> : <Message />}\n        </Container>\n      </Section>\n    </>\n  );\n}\n\nexport default Contacts;"],"names":["children","className","css","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","dispatch","useDispatch","useSelector","handleChange","e","target","value","onSubmit","preventDefault","normalizedName","toLowerCase","find","contact","Report","addContacts","id","htmlFor","type","placeholder","pattern","title","required","onChange","selectFilter","filter","normalizedFilter","getVisibleContact","includes","map","onClick","contactId","deleteContacts","filterInputId","filterActions","Title","styled","Span","useEffect","fetchContacts","Section","Container","length"],"sourceRoot":""}